/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
 *     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/
#ifndef _TUNING_PROVIDER_H_
#define _TUNING_PROVIDER_H_

#include <dpecommon.h>
#include <isp_reg.h>

enum ENUM_CLEAR_REGION  //for GF
{
    E_CLEAR_REGION_SMALL,
    E_CLEAR_REGION_MEDIUM,
    E_CLEAR_REGION_LARGE,
};

enum ENUM_BOKEH_STRENGTH
{
    E_BOKEH_STRENGTH_WEAK,
    E_BOKEH_STRENGTH_NORMAL,
    E_BOKEH_STRENGTH_STRONG
};

enum ENUM_FM_DIRECTION
{
    E_FM_R_TO_L,
    E_FM_L_TO_R
};

using namespace NSCam::NSIoPipe;

class StereoTuningProvider
{
public:
    static bool getDPETuningInfo(DVEConfig *tuningBuffer);
    static bool getWMFTuningInfo(WMFEFILTERSIZE &size, void *tbliBuffer);
    static ENUM_CLEAR_REGION getGFTuningInfo();
    //tuningBuffer: QParams.mvTuningData(dip_x_reg_t *)
    static bool getBokehTuningInfo(void *tuningBuffer, ENUM_BOKEH_STRENGTH eBokehStrength=E_BOKEH_STRENGTH_NORMAL);
    static bool getFMTuningInfo(ENUM_FM_DIRECTION direction, DIP_X_REG_FM_SIZE &fmSizeInfo, DIP_X_REG_FM_TH_CON0 &fmThInfo);

protected:
    static void initDPETuningInfo(DVEConfig *tuningBuffer);
    static void initBokehTuningInfo(dip_x_reg_t *tuning, ENUM_BOKEH_STRENGTH eBokehStrength);
};

#endif