/*======================================================================*
 DTS, Inc.
 5220 Las Virgenes Road
 Calabasas, CA 91302  USA

 CONFIDENTIAL: CONTAINS CONFIDENTIAL PROPRIETARY INFORMATION OWNED BY
 DTS, INC. AND/OR ITS AFFILIATES ("DTS"), INCLUDING BUT NOT LIMITED TO
 TRADE SECRETS, KNOW-HOW, TECHNICAL AND BUSINESS INFORMATION. USE,
 DISCLOSURE OR DISTRIBUTION OF THE SOFTWARE IN ANY FORM IS LIMITED TO
 SPECIFICALLY AUTHORIZED LICENSEES OF DTS.  ANY UNAUTHORIZED
 DISCLOSURE IS A VIOLATION OF STATE, FEDERAL, AND INTERNATIONAL LAWS.
 BOTH CIVIL AND CRIMINAL PENALTIES APPLY.

 DO NOT DUPLICATE. COPYRIGHT 2014, DTS, INC. ALL RIGHTS RESERVED.
 UNAUTHORIZED DUPLICATION IS A VIOLATION OF STATE, FEDERAL AND
 INTERNATIONAL LAWS.

 ALGORITHMS, DATA STRUCTURES AND METHODS CONTAINED IN THIS SOFTWARE
 MAY BE PROTECTED BY ONE OR MORE PATENTS OR PATENT APPLICATIONS.
 UNLESS OTHERWISE PROVIDED UNDER THE TERMS OF A FULLY-EXECUTED WRITTEN
 AGREEMENT BY AND BETWEEN THE RECIPIENT HEREOF AND DTS, THE FOLLOWING
 TERMS SHALL APPLY TO ANY USE OF THE SOFTWARE (THE "PRODUCT") AND, AS
 APPLICABLE, ANY RELATED DOCUMENTATION:  (i) ANY USE OF THE PRODUCT
 AND ANY RELATED DOCUMENTATION IS AT THE RECIPIENT'S SOLE RISK:
 (ii) THE PRODUCT AND ANY RELATED DOCUMENTATION ARE PROVIDED "AS IS"
 AND WITHOUT WARRANTY OF ANY KIND AND DTS EXPRESSLY DISCLAIMS ALL
 WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 PURPOSE, REGARDLESS OF WHETHER DTS KNOWS OR HAS REASON TO KNOW OF THE
 USER'S PARTICULAR NEEDS; (iii) DTS DOES NOT WARRANT THAT THE PRODUCT
 OR ANY RELATED DOCUMENTATION WILL MEET USER'S REQUIREMENTS, OR THAT
 DEFECTS IN THE PRODUCT OR ANY RELATED DOCUMENTATION WILL BE
 CORRECTED; (iv) DTS DOES NOT WARRANT THAT THE OPERATION OF ANY
 HARDWARE OR SOFTWARE ASSOCIATED WITH THIS DOCUMENT WILL BE
 UNINTERRUPTED OR ERROR-FREE; AND (v) UNDER NO CIRCUMSTANCES,
 INCLUDING NEGLIGENCE, SHALL DTS OR THE DIRECTORS, OFFICERS, EMPLOYEES,
 OR AGENTS OF DTS, BE LIABLE TO USER FOR ANY INCIDENTAL, INDIRECT,
 SPECIAL, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, AND LOSS
 OF BUSINESS INFORMATION) ARISING OUT OF THE USE, MISUSE, OR INABILITY
 TO USE THE PRODUCT OR ANY RELATED DOCUMENTATION.
*======================================================================*/

/********************************************************************************
 *	SRS Labs CONFIDENTIAL
 *	@Copyright 2010 by SRS Labs.
 *	All rights reserved.
 *
 *  Description:
 *  Exposes all srs_csdecoder APIs
 *
 *  RCS keywords:
 *	$Id$
 *  $Author$
 *  $Date$
 *	
********************************************************************************/

#ifndef __SRS_CSDECODER_API_H__
#define __SRS_CSDECODER_API_H__

/*Data type definition here:*/

#include "srs_typedefs.h"
#include "srs_fxp.h"
#include "srs_csdecoder_def.h"


#ifdef __cplusplus
extern "C"{
#endif /*__cplusplus*/

//API declaration here:

int				SRS_CSD_GetObjSize(void);
SRSResult		SRS_CSD_CreateObj(SRSCSDObj *pObj, void* pBuf, SRS_Allocator alloc, void *pContext);

SRSResult		SRS_CSD_InitObj16k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj22k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj24k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj32k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj44k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj48k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj64k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj88k(SRSCSDObj csdObj);
SRSResult		SRS_CSD_InitObj96k(SRSCSDObj csdObj);

void			SRS_CSD_SetControlDefaults(SRSCSDObj csdObj);

SRSResult		SRS_CSD_Process(SRSCSDObj csdObj, SRSStereoCh* Input, SRS6Point1Ch* Output, int blockSize, void* workspace);

//"Set" functions:
SRSResult		SRS_CSD_SetInputGain(SRSCSDObj csdObj,				SRSInt16 inputGain);
SRSResult		SRS_CSD_SetProcMode(SRSCSDObj csdObj,				SRSCSDProcMode mode);
SRSResult		SRS_CSD_SetOutMode(SRSCSDObj csdObj,				SRSCSDOutMode outputmode);
void			SRS_CSD_SetPhantomEnable(SRSCSDObj csdObj,			SRSBool enable);
void			SRS_CSD_SetCenterFullBandEnable(SRSCSDObj csdObj,	SRSBool enable);


//"Get" functions:
SRSInt16		SRS_CSD_GetInputGain(SRSCSDObj csdObj);
SRSCSDProcMode	SRS_CSD_GetProcMode(SRSCSDObj csdObj);
SRSCSDOutMode	SRS_CSD_GetOutMode(SRSCSDObj csdObj);
SRSBool			SRS_CSD_GetPhantomEnable(SRSCSDObj csdObj);
SRSBool			SRS_CSD_GetCenterFullBandEnable(SRSCSDObj csdObj);


//Version query:
unsigned char	SRS_CSD_GetTechVersion(SRSVersion which);
unsigned char	SRS_CSD_GetLibVersion(SRSVersion which);

#ifdef __cplusplus
}
#endif /*__cplusplus*/




#endif /*__SRS_CSDECODER_API_H__*/
